# GhostwriterQA Environment Configuration
# Copy this file to .env and update with your actual values

# ================================
# ENVIRONMENT CONFIGURATION
# ================================
ENVIRONMENT=development
DEBUG=true

# ================================
# DATABASE CONFIGURATION
# ================================
# PostgreSQL Database
POSTGRES_USER=ghostwriter
POSTGRES_PASSWORD=password
POSTGRES_DB=ghostwriter_qa
DATABASE_URL=postgresql+asyncpg://ghostwriter:password@postgres:5432/ghostwriter_qa
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_RECYCLE=3600

# ================================
# REDIS CONFIGURATION
# ================================
REDIS_URL=redis://redis:6379/0
REDIS_PASSWORD=
REDIS_SSL=false

# ================================
# CELERY CONFIGURATION
# ================================
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/1
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=json
CELERY_TIMEZONE=UTC

# ================================
# SECURITY CONFIGURATION
# ================================
# JWT Secret Key (Generate with: openssl rand -hex 32)
SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
API_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Encryption Key for sensitive data (Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())")
ENCRYPTION_KEY=your-encryption-key-change-this-in-production

# ================================
# CORS CONFIGURATION
# ================================
BACKEND_CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000","https://localhost:3000"]
ALLOWED_HOSTS=["localhost","127.0.0.1"]

# ================================
# AI SERVICES CONFIGURATION
# ================================
# OpenAI API Configuration
OPENAI_API_KEY=your-openai-api-key-here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4000
OPENAI_TEMPERATURE=0.7

# AI Rate Limiting
AI_REQUESTS_PER_MINUTE=60
AI_REQUESTS_PER_HOUR=1000

# ================================
# EMAIL CONFIGURATION
# ================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_TLS=true
SMTP_SSL=false
EMAIL_FROM=noreply@ghostwriterqa.com
EMAIL_FROM_NAME=GhostwriterQA

# ================================
# FILE STORAGE CONFIGURATION
# ================================
# AWS S3 Configuration
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
S3_BUCKET_NAME=ghostwriterqa-storage
S3_PUBLIC_URL=https://your-bucket.s3.amazonaws.com

# Local File Storage (fallback)
UPLOAD_PATH=uploads
MAX_UPLOAD_SIZE=10485760

# ================================
# MONITORING & LOGGING
# ================================
# Sentry Configuration
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Log Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_ENABLED=true
LOG_FILE_PATH=logs/app.log
LOG_FILE_ROTATION=1 day
LOG_FILE_RETENTION=30 days

# ================================
# APPLICATION LIMITS
# ================================
# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=200

# Test Execution Limits
MAX_CONCURRENT_TESTS=5
MAX_TEST_EXECUTION_TIME=300
MAX_TESTS_PER_SUITE=100

# File Upload Limits
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=json,yaml,yml

# ================================
# EXTERNAL SERVICES
# ================================
# Webhook Configuration
WEBHOOK_SECRET=your-webhook-secret
WEBHOOK_TIMEOUT=30

# Third-party Integrations
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token

# ================================
# PERFORMANCE CONFIGURATION
# ================================
# Worker Configuration
WORKER_PROCESSES=auto
WORKER_CONNECTIONS=1000
WORKER_TIMEOUT=30

# Cache Configuration
CACHE_TTL=3600
CACHE_MAX_SIZE=1000

# ================================
# FRONTEND CONFIGURATION
# ================================
VITE_API_URL=http://localhost:8000
NODE_ENV=development

# ================================
# DOCKER CONFIGURATION
# ================================
COMPOSE_PROJECT_NAME=ghostwriter-qa

# ================================
# DEVELOPMENT CONFIGURATION
# ================================
# Development-only settings
DEV_RELOAD=true
DEV_DEBUG_TOOLBAR=false
DEV_PROFILER=false

# Test Database (for running tests)
TEST_DATABASE_URL=postgresql+asyncpg://ghostwriter:password@postgres:5432/ghostwriter_qa_test